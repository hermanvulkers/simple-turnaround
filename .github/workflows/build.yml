name: Build, push, and deploy to AKS

on:
  push:
    branches: [main]

jobs:
  docker:
    runs-on: ubuntu-latest
    environment: aks-deploy

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set tag based on commit SHA
        id: tag
        run: echo "TAG=$(echo $GITHUB_SHA | cut -c1-8)" >> $GITHUB_ENV

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push backend
        run: |
          docker build -t ghcr.io/hermanvulkers/k8s-microblog-backend:${{ env.TAG }} -f Dockerfile.backend backend/
          docker push ghcr.io/hermanvulkers/k8s-microblog-backend:${{ env.TAG }}

      - name: Build and push frontend
        run: |
          docker build \
            --build-arg VITE_API_URL=http://microblog-backend:3000 \
            -t ghcr.io/hermanvulkers/k8s-microblog-frontend:${{ env.TAG }} \
            -f Dockerfile.frontend frontend/
          docker push ghcr.io/hermanvulkers/k8s-microblog-frontend:${{ env.TAG }}

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3

      - name: Set up Helm
        uses: azure/setup-helm@v3

      - name: Get AKS credentials
        run: |
          az aks get-credentials \
            --resource-group microblog-rg \
            --name microblog-cluster \
            --overwrite-existing
            
      - name: Deploy Kafka cluster
        run: |
          kubectl apply -f kafka/kafka-stack.yaml

      - name: Deploy to AKS with Helm
        run: |
          helm upgrade --install microblog ./k8s/charts/microblog \
            --namespace default \
            --create-namespace \
            --set frontend.image.tag=${{ env.TAG }} \
            --set backend.image.tag=${{ env.TAG }} \
            --set backend.kafkaBroker=my-cluster-kafka-bootstrap.kafka.svc:9092

      - name: Deploy Ingress
        run: |
          kubectl apply -f k8s/ingress.yaml
